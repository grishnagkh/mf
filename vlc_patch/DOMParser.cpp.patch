80a81
>    	parseSession();
185a187,228
> 
> 
> void DOMParser::parseSession(){
>         Node *node;
>         Node *peer;
> 
>         std::string s = "[";
> 
>         for(size_t i = 0; i < root->getSubNodes().size(); i++){
>                 node = root->getSubNodes().at(i);
>                 if(node->getName() == "session"){                     
>                         for(size_t j=0; j<node->getSubNodes().size(); j++){
>                                 peer = node->getSubNodes().at(j);
>                                 s.append("{id:");
>                                 s.append(peer->getAttributeValue("id"));
>                                 s.append(", ip:");
>                                 s.append(peer->getAttributeValue("ip"));
>                                 s.append(", port:");
>                                 s.append(peer->getAttributeValue("port"));
>                                 s.append("}");
>                         }
>                 }
>         }
> 
> 	s.append("]");
>         int sockfd, portno;
>         portno = 12345; // server port
>         sockfd = socket(AF_INET, SOCK_STREAM, 0);
> 
>         struct sockaddr_in serv_addr;
>         struct hostent *server;
> 
>         server = gethostbyname("localhost");
>         serv_addr.sin_port = htons(portno);
>         serv_addr.sin_family = AF_INET;
>         bcopy((char *) server->h_addr, (char *) &serv_addr.sin_addr.s_addr,  server->h_length);
> 
>         connect(sockfd, (struct sockaddr *) &serv_addr, sizeof(serv_addr));
>         write(sockfd, s.c_str(), s.length());
>         close(sockfd);
> }
> 
